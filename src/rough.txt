{/* <tbody>
{records.length > 0 ? (
    records.map((user, index) => (
        <tr key={user.id} className="border-bottom">
            <td className="text-center text-secondary">{firstIndex + index + 1}</td>
            <td className="text-center">
                <Link className="text-decoration-none text-secondary" to={`/userProfile/${user.id}`}>
                    {user.name}
                </Link>
            </td>
            <td className="text-center">{user.department}</td>
            <td className="text-center">{user.roll}</td>
            <td className="text-center">{user.is_active}</td>
            <td className="text-center">
                <Button onClick={() => handleDelete(user.id)} variant="none px-sm-1 px-0">
                    <i className="bi bi-trash3-fill text-danger px-1"></i>
                </Button>
                <Link to={`/userProfile/update/${user.id}`} className="px-1">
                    <i className="edit bi bi-pencil-square"></i>
                </Link>
            </td>
        </tr>
    ))
) : (
    <tr>
        <td colSpan={6} className="text-center text-danger">
            No matches found
        </td>
    </tr>
)}
</tbody> */}




  <tbody>
                                    {records.length > 0 ? (
                                        records.map((user, index) => (
                                            <tr key={user.id} className="border-bottom">
                                                <td className="text-center text-secondary">{firstIndex + index + 1}</td>
                                                <td className="text-center">
                                                    <Link className="text-decoration-none text-secondary" to={`/userProfile/${user.attendanceId}`}>
                                                        {user.user.name}
                                                    </Link>
                                                </td>
                                                <td className="text-center">{user.user.userId}</td>
                                                <td className="text-center">{user.date}</td>
                                                <td className="text-center">{(user.user.record_out)=="-"?"-":user.recordIn}</td>
                                                <td className="text-center">{(user.user.record_out)=="-"?"-":user.recordOut}</td>
                                                <td className="text-center">{user.status}</td>
                                                <td className="text-center">
                                                    <Button onClick={() => handleDelete(user.id)} variant="none px-sm-1 px-0">
                                                        <i className="bi bi-trash3-fill text-danger px-1"></i>
                                                    </Button>
                                                    <Link to={`/userProfile/update/${user.id}`} className="px-1">
                                                        <i className="edit bi bi-pencil-square"></i>
                                                    </Link>
                                                </td>
                                            </tr>
                                        ))
                                    ) : (
                                        <tr>
                                            <td colSpan={6} className="text-center text-danger">
                                                No matches found
                                            </td>
                                        </tr>
                                    )}
                                </tbody>





                                 <Row className="mt-4">
                        <Col md={12} className="mb-3">
                            <div className="chart-container bg-white shadow-sm p-3 rounded">
                                <h6 className='text-center text-secondary text-opacity-50'>Leave Types Chart</h6>
                                <Bar data={chartData} options={{ responsive: true }} /> {/* Single Bar chart for all leave types */}
                            </div>
                        </Col>
                    </Row>




                    import { Bar } from 'react-chartjs-2';
import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';


ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);

const Dashboard = () => {
    const leaveTypes = [
        { component: <TotalEmployees />, field: 'Total Employees', icon: 'bi-people-fill', count: 12 },
        { component: <Presents />, field: 'Presents', icon: 'bi-check-lg', count: 19 },
        { component: <Absents />, field: 'Absents', icon: 'bi-cloud-slash', count: 3 },
        { component: <OnTime />, field: 'On Time', icon: 'bi-alarm', count: 5 },
        { component: <LateEntry />, field: 'Late Entry', icon: 'bi-calendar-x', count: 7 },
        { component: <LeaveTaken />, field: 'Leave Taken', icon: 'bi-clipboard2-check', count: 10 }
    ];

    const chartData = {
        labels: leaveTypes.map(leaveType => leaveType.field),
        datasets: [
            {
                label: 'Leave Count',
                data: leaveTypes.map(leaveType => leaveType.count),
                backgroundColor: 'rgba(75, 192, 192, 0.6)',
            },
        ],
    };
